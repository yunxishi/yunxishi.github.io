<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VBS</title>
      <link href="/2024/07/21/VBS/"/>
      <url>/2024/07/21/VBS/</url>
      
        <content type="html"><![CDATA[<p><a href="https://pan.baidu.com/s/1MK8tf3wR17MAwr23aXV7Jw">原题链接</a><br>提取码：1234 </p><p>这是vbs混淆，首先我们打开vs studio，打开调试-&gt;选项-&gt;实时，把脚本选项打开</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407210946058.png" alt="image-20240721094623995"></p><p>win+R，wscript &#x2F;X +文件路径，这里是我的路径：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wscript /X D:\赛题\赛题\HNCTF\Reverse\Baby_OBVBS\Baby_OBVBS\Baby_OBVBS.vbs</span><br></pre></td></tr></table></figure><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407211100889.png" alt="image-20240721110049852"></p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407211323528.png" alt="image-20240721110118287"></p><p>再点击vs studio是这种显示</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407211124554.png" alt="image-20240721112448494"></p><p>ctrl+a全选复制到记事本</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407211128036.png" alt="image-20240721112854990"></p><p>这是vbs混淆，通过脚本来解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Option Explicit</span><br><span class="line"> </span><br><span class="line">Function Defuscator(vbs)</span><br><span class="line">Dim t</span><br><span class="line">t = InStr(1, vbs, &quot;Execute&quot;, 1)</span><br><span class="line">t = Mid(vbs, t + Len(&quot;Execute&quot;)) </span><br><span class="line">t = Eval(t)</span><br><span class="line">Defuscator = t</span><br><span class="line">End Function</span><br><span class="line"> </span><br><span class="line">Dim fso, i</span><br><span class="line">Const ForReading = 1</span><br><span class="line">Set fso = CreateObject(&quot;Scripting.FileSystemObject&quot;)</span><br><span class="line">For i = 0 To WScript.Arguments.Count - 1 </span><br><span class="line">Dim FileName</span><br><span class="line">FileName = WScript.Arguments(i)</span><br><span class="line">Dim MyFile</span><br><span class="line">Set MyFile = fso.OpenTextFile(FileName, ForReading)</span><br><span class="line">Dim vbs</span><br><span class="line">vbs = MyFile.ReadAll</span><br><span class="line">WScript.Echo Defuscator(vbs)</span><br><span class="line">MyFile.Close</span><br><span class="line">Next</span><br><span class="line"> </span><br><span class="line">Set fso = Nothing</span><br><span class="line"> </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">这段VBScript代码定义了一个名为Defuscator的函数，其主要功能是读取并执行来自其他VBScript文件中的特定代码段。下面是对整个脚本的详细解释：</span><br><span class="line"></span><br><span class="line">    一、Option Explicit: 这一行声明要求在使用变量之前必须显式声明它们，以避免因拼写错误或未初始化的变量而引起的错误。</span><br><span class="line"></span><br><span class="line">    二、Defuscator Function: 定义了一个名为Defuscator的函数，它接受一个参数vbs（预期是一个包含VBScript代码的字符串）。</span><br><span class="line">        1.使用InStr(1, vbs, &quot;Execute&quot;, 1)查找&quot;Execute&quot;第一次出现的位置。这通常用于定位嵌入在输入字符串中的特定命令或模式。</span><br><span class="line">        2.Mid(vbs, t + Len(&quot;Execute&quot;))从&quot;Execute&quot;之后的字符开始截取字符串，假设之后的内容是要执行的VBScript代码。</span><br><span class="line">        3.Eval(t)函数会计算并执行截取出的字符串t作为VBScript代码。这是一种动态执行代码的方式，非常灵活但也可能引入安全风险。</span><br><span class="line">        4.最后，Defuscator函数返回执行结果。</span><br><span class="line"></span><br><span class="line">    三、文件操作部分:</span><br><span class="line">        1.通过Dim fso, i声明了两个变量，fso用于文件系统操作，i用于循环计数。</span><br><span class="line">        2.Const ForReading = 1定义了一个常量，表示以只读模式打开文件。</span><br><span class="line">        3.使用CreateObject(&quot;Scripting.FileSystemObject&quot;)创建一个FileSystemObject实例，允许进行文件和目录操作。</span><br><span class="line">        4.通过WScript.Arguments.Count遍历命令行传入的所有参数（这些参数应该是文件名）。</span><br><span class="line">        5.对于每个参数（即每个文件名），打开文件，读取所有内容到变量vbs中。</span><br><span class="line">        6.调用Defuscator(vbs)函数来执行读取到的VBScript代码，并通过WScript.Echo输出执行结果。</span><br><span class="line">        7.读取完成后关闭文件。</span><br><span class="line"></span><br><span class="line">    四、清理: Set fso = Nothing释放对FileSystemObject实例的引用，这是良好编程习惯，有助于及时释放资源。</span><br><span class="line"></span><br><span class="line">总结来说，这段脚本设计用于读取一系列指定的VBScript文件，寻找并执行其中以&quot;Execute&quot;关键字开始的代码段，然后打印出执行结果。这种类型的脚本可能用于处理或分析已编码或混淆的VBScript代码，但同时也需要注意，直接执行未经检查的代码存在安全隐患</span><br></pre></td></tr></table></figure><p>将脚本保存到记事本内并命名为defuscator.vbs，和该题放到同一目录下</p><p>在该目录下打开终端，执行命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cscript defuscator.vbs Baby_OBVBS.vbs</span><br></pre></td></tr></table></figure><p>显示结果</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407211337765.png" alt="image-20240721133723716"></p><p>将显示的内容粘贴到记事本以方便观看</p><p>每一段base后都是一段代码，分别破解后保存下来</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407211340070.png" alt="image-20240721133959978"></p><p>再次保存下来的代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">eAqi = &quot;59fc6b263c3d0fcbc331ade699e62d3473bbf85522d588e3423e6c751ca091528a3c0186e460483917192c14&quot;</span><br><span class="line">ANtg = &quot;baacc7ffa8232d28f814bb14c428798b&quot;</span><br><span class="line">Function Base64Decode(base64EncodedString)</span><br><span class="line">    Dim xml, elem</span><br><span class="line">    Set xml = CreateObject(&quot;MSXML2.DOMDocument&quot;)</span><br><span class="line">    Set elem = xml.createElement(&quot;tmp&quot;)</span><br><span class="line">    elem.dataType = &quot;bin.base64&quot;</span><br><span class="line">    elem.text = base64EncodedString</span><br><span class="line">    Dim stream</span><br><span class="line">    Set stream = CreateObject(&quot;ADODB.Stream&quot;)</span><br><span class="line">    stream.Type = 1 &#x27;Binary</span><br><span class="line">    stream.Open</span><br><span class="line">    stream.Write elem.nodeTypedValue</span><br><span class="line">    stream.Position = 0</span><br><span class="line">    stream.Type = 2 &#x27;Text</span><br><span class="line">    stream.Charset = &quot;utf-8&quot;</span><br><span class="line">    Base64Decode = stream.ReadText</span><br><span class="line">    stream.Close</span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Function Initialize(strPwd)</span><br><span class="line">    Dim box(256)</span><br><span class="line">    Dim tempSwap</span><br><span class="line">    Dim a</span><br><span class="line">    Dim b</span><br><span class="line"></span><br><span class="line">    For i = 0 To 255</span><br><span class="line">        box(i) = i</span><br><span class="line">    Next</span><br><span class="line"></span><br><span class="line">    a = 0</span><br><span class="line">    b = 0</span><br><span class="line"></span><br><span class="line">    For i = 0 To 255</span><br><span class="line">        a = (a + box(i) + Asc(Mid(strPwd, (i Mod Len(strPwd)) + 1, 1))) Mod 256</span><br><span class="line">        tempSwap = box(i)</span><br><span class="line">        box(i) = box(a)</span><br><span class="line">        box(a) = tempSwap</span><br><span class="line">    Next</span><br><span class="line"></span><br><span class="line">    Initialize = box</span><br><span class="line">End Function</span><br><span class="line">Function Myfunc(strToHash)</span><br><span class="line">    Dim tmpFile, strCommand, objFSO, objWshShell, out</span><br><span class="line">    Set objFSO = CreateObject(&quot;Scripting.FileSystemObject&quot;)</span><br><span class="line">    Set objWshShell = CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">    tmpFile = objFSO.GetSpecialFolder(2).Path &amp; &quot;\&quot; &amp; objFSO.GetTempName</span><br><span class="line">    objFSO.CreateTextFile(tmpFile).Write(strToHash)</span><br><span class="line">    strCommand = &quot;certutil -hashfile &quot; &amp; tmpFile &amp; &quot; MD5&quot;</span><br><span class="line">    out = objWshShell.Exec(strCommand).StdOut.ReadAll</span><br><span class="line">    objFSO.DeleteFile tmpFile</span><br><span class="line">    Myfunc = Replace(Split(Trim(out), vbCrLf)(1), &quot; &quot;, &quot;&quot;)</span><br><span class="line">End Function</span><br><span class="line">Function EnCrypt(box, strData)</span><br><span class="line">    Dim tempSwap</span><br><span class="line">    Dim a</span><br><span class="line">    Dim b</span><br><span class="line">    Dim x</span><br><span class="line">    Dim y</span><br><span class="line">    Dim encryptedData</span><br><span class="line">    encryptedData = &quot;&quot;</span><br><span class="line">    For x = 1 To Len(strData)</span><br><span class="line">        a = (a + 1) Mod 256</span><br><span class="line">        b = (b + box(a)) Mod 256</span><br><span class="line">        tempSwap = box(a)</span><br><span class="line">        box(a) = box(b)</span><br><span class="line">        box(b) = tempSwap</span><br><span class="line">        y = Asc(Mid(strData, x, 1)) Xor box((box(a) + box(b)) Mod 256)</span><br><span class="line">        encryptedData = encryptedData &amp; LCase(Right(&quot;0&quot; &amp; Hex(y), 2))</span><br><span class="line">    Next</span><br><span class="line">    EnCrypt = encryptedData</span><br><span class="line">End Function</span><br><span class="line">msgbox &quot;Do you know VBScript?&quot;</span><br><span class="line">msgbox &quot;VBScript (&quot;&quot;Microsoft Visual Basic Scripting Edition&quot;&quot;) is a deprecated Active Scripting language developed by Microsoft that is modeled on Visual Basic.&quot;</span><br><span class="line">msgbox &quot;It allows Microsoft Windows system administrators to generate powerful tools for managing computers without error handling and with subroutines and other advanced programming constructs. It can give the user complete control over many aspects of their computing environment.&quot;</span><br><span class="line">msgbox &quot;Interestingly, although VBScript has long since been deprecated, you can still run VBScript scripts on the latest versions of Windows 11 systems.&quot;</span><br><span class="line">msgbox &quot;A VBScript script must be executed within a host environment, of which there are several provided with Microsoft Windows, including: Windows Script Host (WSH), Internet Explorer (IE), and Internet Information Services (IIS).&quot;</span><br><span class="line">msgbox &quot;For .vbs files, the host is Windows Script Host (WSH), aka wscript.exe/cscript.exe program in your system.&quot;</span><br><span class="line">msgbox &quot;If you can not stop a VBScript from running (e.g. a dead loop), go to the task manager and kill wscript.exe/cscript.exe.&quot;</span><br><span class="line">msgbox &quot;cscript and wscript are executables for the scripting host that are used to run the scripts. cscript and wscript are both interpreters to run VBScript (and other scripting languages like JScript) on the Windows platform.&quot;</span><br><span class="line">msgbox &quot;cscript is for console applications and wscript is for Windows applications. It has something to do with STDIN, STDOUT and STDERR.&quot;</span><br><span class="line">msgbox &quot;OK! Now, let us begin our journey.&quot;</span><br><span class="line"></span><br><span class="line">key = InputBox(&quot;Enter the key:&quot;, &quot;CTF Challenge&quot;)</span><br><span class="line">if (key = False) then wscript.quit</span><br><span class="line">if (len(key)&lt;&gt;6) then</span><br><span class="line">    wscript.echo &quot;wrong key length!&quot;</span><br><span class="line">    wscript.quit</span><br><span class="line">end if</span><br><span class="line">If (Myfunc(key) = ANtg) Then</span><br><span class="line">    wscript.echo &quot;You get the key!Move to next challenge.&quot;</span><br><span class="line">Else</span><br><span class="line">    wscript.echo &quot;Wrong key!Try again!&quot;</span><br><span class="line">    wscript.quit</span><br><span class="line">End If</span><br><span class="line"></span><br><span class="line">userInput = InputBox(&quot;Enter the flag:&quot;, &quot;CTF Challenge&quot;)</span><br><span class="line">if (userInput = False) then wscript.quit</span><br><span class="line">if (len(userInput)&lt;&gt;44) then</span><br><span class="line">    wscript.echo &quot;wrong!&quot;</span><br><span class="line">    wscript.quit</span><br><span class="line">end if</span><br><span class="line">box = Initialize(key)</span><br><span class="line">encryptedInput = EnCrypt(box, userInput)</span><br><span class="line"></span><br><span class="line">If (encryptedInput = eAqi) Then</span><br><span class="line">    MsgBox &quot;Congratulations! You have learned VBS!&quot;</span><br><span class="line">Else</span><br><span class="line">    MsgBox &quot;Wrong flag. Try again.&quot;</span><br><span class="line">End If</span><br><span class="line"></span><br><span class="line">wscript.echo &quot;bye!&quot;</span><br></pre></td></tr></table></figure><p>开头的ANtg在下面一段中找到了</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407211344113.png" alt="image-20240721134422080"></p><p>Myfun就是md5</p><p><a href="https://www.somd5.com/">md5在线解密破解</a></p><p>解密的结果是： H&amp;NKEY</p><p>RC4解密得出结果</p><p>H&amp;NCTF{VBS_1s_@_s0_7unny_an4_pow3rfu1_t00l!}</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407211434557.png" alt="image-20240721143432511"></p>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>花指令脚本</title>
      <link href="/2024/07/17/%E8%8A%B1%E6%8C%87%E4%BB%A4%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/07/17/%E8%8A%B1%E6%8C%87%E4%BB%A4%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>花指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">startaddr = 0x001144</span><br><span class="line">endaddr = 0x3100</span><br><span class="line"> </span><br><span class="line">for i in range(startaddr,endaddr):</span><br><span class="line">    if get_wide_byte(i) == 0xEB: # 获取地址 i 处的字节数据，然后检查该字节数据是否等于 0xEB（十六进制）</span><br><span class="line">        if get_wide_byte(i+1) == 0xFF: # 如果前一个字节等于 0xEB，则继续检查地址 i+1 处的字节数据是否等于 0xFF</span><br><span class="line">            patch_byte(i,0x90) # 将地址 i 处的字节数据替换为 0x90（0x90其实就是nop指令）</span><br><span class="line">            print(&quot;[+] Addr &#123;&#125; is patched&quot;.format(hex(i)))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>base64脚本</title>
      <link href="/2024/07/17/base64%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/07/17/base64%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<p>base64脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;&quot;</span>   <span class="comment">#str1是要解密的代码</span></span><br><span class="line">string1 = <span class="string">&quot;&quot;</span>   <span class="comment">#string1是改过之后的base64表</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span></span><br><span class="line"><span class="built_in">print</span> (base64.b64decode(str1.translate(<span class="built_in">str</span>.maketrans(string1,string2))))</span><br></pre></td></tr></table></figure><p>推断base 64编码的方法：</p><p>1、是否 使用64个字符来表示所有可能的值。这些字符通常包括大小写字母、数字和一些特殊字符例如’A’到’Z’、’a’到’z’、’0’到’9’、’+’和’&#x2F;‘。有时候，也可能会包含填充字符’&#x3D;’</p><p>2、如果输入的数据长度不是3的倍数，base 64编码会使用填充字符来补齐。通常填充字符为’&#x3D;’，用于表示数据结尾的不完整片段出现在编码末尾，用于对数据进行填充以满足长度要求。因此，可以检查文本末尾是否包含1到2个”&#x3D;”字符</p><p>3、<strong>字符对应关系</strong>: Base 64编码将输入的数据按照固定的规则映射到字符集中的字符。例如，输入的3个字节数据会被拆分成4个6位的片段，每个片段对应一个Base 64字符。</p>]]></content>
      
      
      <categories>
          
          <category> 密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AES</title>
      <link href="/2024/07/17/AES/"/>
      <url>/2024/07/17/AES/</url>
      
        <content type="html"><![CDATA[<h1 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h1><p>AES是一种分组加密算法，明文分组大小为128位，密钥长度有128、192、256位三种。</p><p>分组密码也就是把明文分成一组一组的，每组长度相等，每次加密一组数据，直到加密完整个明文。在AES标准规范中，分组长度只能是128位，也就是说，每个分组为16个字节（每个字节8位）。密钥的长度可以使用128位、192位或256位。密钥的长度不同，推荐加密轮数也不同，如下表所示：</p><p>AES     密钥长度（32位比特字)分组长度(32位比特字)加密轮数<br>AES-128          4                                    4                         10<br>AES-192      6                                    4                         12<br>AES-256          8                                4                         14<br>轮数在下面介绍，这里实现的是AES-128，也就是密钥的长度为128位，加密轮数为10轮。<br>上面说到，AES的加密公式为C &#x3D; E(K,P)，在加密函数E中，会执行一个轮函数，并且执行10次这个轮函数，这个轮函数的前9次执行的操作是一样的，只有第10次有所不同。也就是说，一个明文分组会被加密10轮。AES的核心就是实现一轮中的所有操作。<br>AES的处理单位是字节，128位的输入明文分组P和输入密钥K都被分成16个字节，分别记为P &#x3D; P0 P1 … P15 和 K &#x3D; K0 K1 … K15。如，明文分组为P &#x3D; abcdefghijklmnop,其中的字符a对应P0，p对应P15。一般地，明文分组用字节为单位的正方形矩阵描述，称为状态矩阵。在算法的每一轮中，状态矩阵的内容不断发生变化，最后的结果作为密文输出。该矩阵中字节的排列顺序为从上到下、从左至右依次排列，如下图所示：</p><p><strong>AES特征：</strong></p><p>1、注意循环次数以及循环过程，例如AES-128进行10次循环，前9次相同</p><p>2、加密的第1轮到第9轮的轮函数一样，包括4个操作：字节代换、行位移、列混合和轮密钥加。最后一轮迭代不执行列混合。另外，在第一轮迭代之前，先将明文和原始密钥进行一次异或加密操作。</p><p>3、明文大小为128位，16字节</p><p>4、留意是否有S盒或逆S盒</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include &lt;cstdlib&gt;</span></span><br><span class="line"><span class="comment">#include &lt;stdio.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">typedef unsigned char byte;</span><br><span class="line">struct word</span><br><span class="line">&#123;</span><br><span class="line">byte wordKey[<span class="number">4</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AES</span></span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">AES()&#123;</span><br><span class="line">initRcon();</span><br><span class="line">&#125;;</span><br><span class="line">// ~AES();</span><br><span class="line">void setCipherKey(byte key[]);</span><br><span class="line">void setPlainText(byte plain[]);</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">void keyExpansion(byte key[], word w[]);</span><br><span class="line">word rotWord(word w);</span><br><span class="line">word subWord(word w);</span><br><span class="line">word wordXOR(word w1, word w2);</span><br><span class="line">//functions <span class="keyword">in</span> encryption <span class="keyword">and</span> decryption</span><br><span class="line">void encryption();</span><br><span class="line">void processEncryption();</span><br><span class="line">void addRoundKey(word <span class="keyword">in</span>[], <span class="built_in">int</span> <span class="built_in">round</span>);</span><br><span class="line">void subByte(word <span class="keyword">in</span>[]);</span><br><span class="line">void shiftRows(word <span class="keyword">in</span>[]);</span><br><span class="line">void mixColumn(word <span class="keyword">in</span>[]);</span><br><span class="line">byte GFMultiplyByte(byte L, byte R);</span><br><span class="line">void decryption();</span><br><span class="line">void processDecryption();</span><br><span class="line">void invShiftRows(word <span class="keyword">in</span>[]);</span><br><span class="line">void invSubByte(word <span class="keyword">in</span>[]);</span><br><span class="line">void invMixColumn(word <span class="keyword">in</span>[]);</span><br><span class="line">void initRcon();</span><br><span class="line">void showWord(word w[], <span class="built_in">int</span> <span class="built_in">len</span>);</span><br><span class="line">void showMesage();</span><br><span class="line">private:</span><br><span class="line">byte cipherKey[<span class="number">16</span>];</span><br><span class="line">word plainText[<span class="number">4</span>];</span><br><span class="line">word cipherText[<span class="number">4</span>];</span><br><span class="line">word deCipherText[<span class="number">4</span>];</span><br><span class="line">static const <span class="built_in">int</span> Nb=<span class="number">4</span>, Nk=<span class="number">4</span>, Nr=<span class="number">10</span>;</span><br><span class="line">word Rcon[<span class="number">11</span>];</span><br><span class="line">word wordKey[<span class="number">44</span>];</span><br><span class="line">static const byte SBox[<span class="number">16</span>][<span class="number">16</span>];</span><br><span class="line">static const byte invSBox[<span class="number">16</span>][<span class="number">16</span>];</span><br><span class="line">static const byte mixColumnMatrix[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">static const byte invmixColumnMatrix[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">void AES::showWord(word w[], <span class="built_in">int</span> <span class="built_in">len</span>)&#123;</span><br><span class="line"><span class="built_in">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="built_in">len</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">printf(<span class="string">&quot;%x &quot;</span>, w[i].wordKey[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void AES::showMesage()&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;plainText:&quot;</span>&lt;&lt;endl;</span><br><span class="line">showWord(plainText, <span class="number">4</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;wordKey:&quot;</span>&lt;&lt;endl;</span><br><span class="line">showWord(wordKey, Nb*(Nr+<span class="number">1</span>));</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;cipherText:&quot;</span>&lt;&lt;endl;</span><br><span class="line">showWord(cipherText, <span class="number">4</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;deCipherText:&quot;</span>&lt;&lt;endl;</span><br><span class="line">showWord(deCipherText, <span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line">// initialize the plainText--trans plaintext <span class="keyword">from</span> vector to state_matrix</span><br><span class="line">void AES::setPlainText(byte plain[])&#123;</span><br><span class="line"><span class="built_in">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">16</span>; i++)&#123;</span><br><span class="line">plainText[i/<span class="number">4</span>].wordKey[i%<span class="number">4</span>] = plain[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//initialize the key--<span class="keyword">from</span> vector to state_matrix</span><br><span class="line">void AES::setCipherKey(byte key[])&#123;</span><br><span class="line"><span class="built_in">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">16</span>; i++)&#123;</span><br><span class="line">cipherKey[i] = key[i];</span><br><span class="line">&#125;</span><br><span class="line">keyExpansion(cipherKey, wordKey);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//initialize the Rcon</span><br><span class="line">void AES::initRcon()&#123;</span><br><span class="line"><span class="built_in">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">Rcon[i].wordKey[j] = <span class="number">0x0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Rcon[<span class="number">1</span>].wordKey[<span class="number">0</span>] = <span class="number">0x01</span>;</span><br><span class="line">Rcon[<span class="number">2</span>].wordKey[<span class="number">0</span>] = <span class="number">0x02</span>;</span><br><span class="line">Rcon[<span class="number">3</span>].wordKey[<span class="number">0</span>] = <span class="number">0x04</span>;</span><br><span class="line">Rcon[<span class="number">4</span>].wordKey[<span class="number">0</span>] = <span class="number">0x08</span>;</span><br><span class="line">Rcon[<span class="number">5</span>].wordKey[<span class="number">0</span>] = <span class="number">0x10</span>;</span><br><span class="line">Rcon[<span class="number">6</span>].wordKey[<span class="number">0</span>] = <span class="number">0x20</span>;</span><br><span class="line">Rcon[<span class="number">7</span>].wordKey[<span class="number">0</span>] = <span class="number">0x40</span>;</span><br><span class="line">Rcon[<span class="number">8</span>].wordKey[<span class="number">0</span>] = <span class="number">0x80</span>;</span><br><span class="line">Rcon[<span class="number">9</span>].wordKey[<span class="number">0</span>] = <span class="number">0x1b</span>;</span><br><span class="line">Rcon[<span class="number">10</span>].wordKey[<span class="number">0</span>] = <span class="number">0x36</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//initialize the const of mixColumn <span class="keyword">and</span> invMixColumn</span><br><span class="line">const byte AES::mixColumnMatrix[<span class="number">4</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">&#123;<span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x01</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x01</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">const byte AES::invmixColumnMatrix[<span class="number">4</span>][<span class="number">4</span>] = &#123;</span><br><span class="line">&#123;<span class="number">0x0e</span>, <span class="number">0x0b</span>, <span class="number">0x0d</span>, <span class="number">0x09</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x09</span>, <span class="number">0x0e</span>, <span class="number">0x0b</span>, <span class="number">0x0d</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x0d</span>, <span class="number">0x09</span>, <span class="number">0x0e</span>, <span class="number">0x0b</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x0b</span>, <span class="number">0x0d</span>, <span class="number">0x09</span>, <span class="number">0x0e</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//initialize SBox</span><br><span class="line">const byte AES::SBox[<span class="number">16</span>][<span class="number">16</span>] = &#123;</span><br><span class="line">&#123;<span class="number">0x63</span>, <span class="number">0x7c</span>, <span class="number">0x77</span>, <span class="number">0x7b</span>, <span class="number">0xf2</span>, <span class="number">0x6b</span>, <span class="number">0x6f</span>, <span class="number">0xc5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x2b</span>, <span class="number">0xfe</span>, <span class="number">0xd7</span>, <span class="number">0xab</span>, <span class="number">0x76</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xca</span>, <span class="number">0x82</span>, <span class="number">0xc9</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xf0</span>, <span class="number">0xad</span>, <span class="number">0xd4</span>, <span class="number">0xa2</span>, <span class="number">0xaf</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x72</span>, <span class="number">0xc0</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xb7</span>, <span class="number">0xfd</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3f</span>, <span class="number">0xf7</span>, <span class="number">0xcc</span>, <span class="number">0x34</span>, <span class="number">0xa5</span>, <span class="number">0xe5</span>, <span class="number">0xf1</span>, <span class="number">0x71</span>, <span class="number">0xd8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x04</span>, <span class="number">0xc7</span>, <span class="number">0x23</span>, <span class="number">0xc3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9a</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xe2</span>, <span class="number">0xeb</span>, <span class="number">0x27</span>, <span class="number">0xb2</span>, <span class="number">0x75</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2c</span>, <span class="number">0x1a</span>, <span class="number">0x1b</span>, <span class="number">0x6e</span>, <span class="number">0x5a</span>, <span class="number">0xa0</span>, <span class="number">0x52</span>, <span class="number">0x3b</span>, <span class="number">0xd6</span>, <span class="number">0xb3</span>, <span class="number">0x29</span>, <span class="number">0xe3</span>, <span class="number">0x2f</span>, <span class="number">0x84</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x53</span>, <span class="number">0xd1</span>, <span class="number">0x00</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0xfc</span>, <span class="number">0xb1</span>, <span class="number">0x5b</span>, <span class="number">0x6a</span>, <span class="number">0xcb</span>, <span class="number">0xbe</span>, <span class="number">0x39</span>, <span class="number">0x4a</span>, <span class="number">0x4c</span>, <span class="number">0x58</span>, <span class="number">0xcf</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xd0</span>, <span class="number">0xef</span>, <span class="number">0xaa</span>, <span class="number">0xfb</span>, <span class="number">0x43</span>, <span class="number">0x4d</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xf9</span>, <span class="number">0x02</span>, <span class="number">0x7f</span>, <span class="number">0x50</span>, <span class="number">0x3c</span>, <span class="number">0x9f</span>, <span class="number">0xa8</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x51</span>, <span class="number">0xa3</span>, <span class="number">0x40</span>, <span class="number">0x8f</span>, <span class="number">0x92</span>, <span class="number">0x9d</span>, <span class="number">0x38</span>, <span class="number">0xf5</span>, <span class="number">0xbc</span>, <span class="number">0xb6</span>, <span class="number">0xda</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xff</span>, <span class="number">0xf3</span>, <span class="number">0xd2</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xcd</span>, <span class="number">0x0c</span>, <span class="number">0x13</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xc4</span>, <span class="number">0xa7</span>, <span class="number">0x7e</span>, <span class="number">0x3d</span>, <span class="number">0x64</span>, <span class="number">0x5d</span>, <span class="number">0x19</span>, <span class="number">0x73</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4f</span>, <span class="number">0xdc</span>, <span class="number">0x22</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xee</span>, <span class="number">0xb8</span>, <span class="number">0x14</span>, <span class="number">0xde</span>, <span class="number">0x5e</span>, <span class="number">0x0b</span>, <span class="number">0xdb</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xe0</span>, <span class="number">0x32</span>, <span class="number">0x3a</span>, <span class="number">0x0a</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5c</span>, <span class="number">0xc2</span>, <span class="number">0xd3</span>, <span class="number">0xac</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0x79</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xe7</span>, <span class="number">0xc8</span>, <span class="number">0x37</span>, <span class="number">0x6d</span>, <span class="number">0x8d</span>, <span class="number">0xd5</span>, <span class="number">0x4e</span>, <span class="number">0xa9</span>, <span class="number">0x6c</span>, <span class="number">0x56</span>, <span class="number">0xf4</span>, <span class="number">0xea</span>, <span class="number">0x65</span>, <span class="number">0x7a</span>, <span class="number">0xae</span>, <span class="number">0x08</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xba</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0xa6</span>, <span class="number">0xb4</span>, <span class="number">0xc6</span>, <span class="number">0xe8</span>, <span class="number">0xdd</span>, <span class="number">0x74</span>, <span class="number">0x1f</span>, <span class="number">0x4b</span>, <span class="number">0xbd</span>, <span class="number">0x8b</span>, <span class="number">0x8a</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x70</span>, <span class="number">0x3e</span>, <span class="number">0xb5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xf6</span>, <span class="number">0x0e</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xb9</span>, <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x1d</span>, <span class="number">0x9e</span>&#125;,</span><br><span class="line">&#123;<span class="number">0xe1</span>, <span class="number">0xf8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xd9</span>, <span class="number">0x8e</span>, <span class="number">0x94</span>, <span class="number">0x9b</span>, <span class="number">0x1e</span>, <span class="number">0x87</span>, <span class="number">0xe9</span>, <span class="number">0xce</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xdf</span>&#125;,</span><br><span class="line">&#123;<span class="number">0x8c</span>, <span class="number">0xa1</span>, <span class="number">0x89</span>, <span class="number">0x0d</span>, <span class="number">0xbf</span>, <span class="number">0xe6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0x2d</span>, <span class="number">0x0f</span>, <span class="number">0xb0</span>, <span class="number">0x54</span>, <span class="number">0xbb</span>, <span class="number">0x16</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">const byte AES::invSBox[<span class="number">16</span>][<span class="number">16</span>] = &#123;</span><br><span class="line"><span class="number">0x31</span>, <span class="number">0x52</span>, <span class="number">0x5A</span>, <span class="number">0xC8</span>, <span class="number">0x0B</span>, <span class="number">0xAC</span>, <span class="number">0xF3</span>, <span class="number">0x3A</span>, <span class="number">0x8B</span>, <span class="number">0x54</span>, </span><br><span class="line">  <span class="number">0x27</span>, <span class="number">0x9B</span>, <span class="number">0xAB</span>, <span class="number">0x95</span>, <span class="number">0xDE</span>, <span class="number">0x83</span>, <span class="number">0x60</span>, <span class="number">0xCB</span>, <span class="number">0x53</span>, <span class="number">0x7F</span>, </span><br><span class="line">  <span class="number">0xC4</span>, <span class="number">0xE3</span>, <span class="number">0x0A</span>, <span class="number">0x97</span>, <span class="number">0xE0</span>, <span class="number">0x29</span>, <span class="number">0xD5</span>, <span class="number">0x68</span>, <span class="number">0xC5</span>, <span class="number">0xDF</span>, </span><br><span class="line">  <span class="number">0xF4</span>, <span class="number">0x7B</span>, <span class="number">0xAA</span>, <span class="number">0xD6</span>, <span class="number">0x42</span>, <span class="number">0x78</span>, <span class="number">0x6C</span>, <span class="number">0xE9</span>, <span class="number">0x70</span>, <span class="number">0x17</span>, </span><br><span class="line">  <span class="number">0xD7</span>, <span class="number">0x37</span>, <span class="number">0x24</span>, <span class="number">0x49</span>, <span class="number">0x75</span>, <span class="number">0xA9</span>, <span class="number">0x89</span>, <span class="number">0x67</span>, <span class="number">0x03</span>, <span class="number">0xFA</span>, </span><br><span class="line">  <span class="number">0xD9</span>, <span class="number">0x91</span>, <span class="number">0xB4</span>, <span class="number">0x5B</span>, <span class="number">0xC2</span>, <span class="number">0x4E</span>, <span class="number">0x92</span>, <span class="number">0xFC</span>, <span class="number">0x46</span>, <span class="number">0xB1</span>, </span><br><span class="line">  <span class="number">0x73</span>, <span class="number">0x08</span>, <span class="number">0xC7</span>, <span class="number">0x74</span>, <span class="number">0x09</span>, <span class="number">0xAF</span>, <span class="number">0xEC</span>, <span class="number">0xF5</span>, <span class="number">0x4D</span>, <span class="number">0x2D</span>, </span><br><span class="line">  <span class="number">0xEA</span>, <span class="number">0xA5</span>, <span class="number">0xDA</span>, <span class="number">0xEF</span>, <span class="number">0xA6</span>, <span class="number">0x2B</span>, <span class="number">0x7E</span>, <span class="number">0x0C</span>, <span class="number">0x8F</span>, <span class="number">0xB0</span>, </span><br><span class="line">  <span class="number">0x04</span>, <span class="number">0x06</span>, <span class="number">0x62</span>, <span class="number">0x84</span>, <span class="number">0x15</span>, <span class="number">0x8E</span>, <span class="number">0x12</span>, <span class="number">0x1D</span>, <span class="number">0x44</span>, <span class="number">0xC0</span>, </span><br><span class="line">  <span class="number">0xE2</span>, <span class="number">0x38</span>, <span class="number">0xD4</span>, <span class="number">0x47</span>, <span class="number">0x28</span>, <span class="number">0x45</span>, <span class="number">0x6E</span>, <span class="number">0x9D</span>, <span class="number">0x63</span>, <span class="number">0xCF</span>, </span><br><span class="line">  <span class="number">0xE6</span>, <span class="number">0x8C</span>, <span class="number">0x18</span>, <span class="number">0x82</span>, <span class="number">0x1B</span>, <span class="number">0x2C</span>, <span class="number">0xEE</span>, <span class="number">0x87</span>, <span class="number">0x94</span>, <span class="number">0x10</span>, </span><br><span class="line">  <span class="number">0xC1</span>, <span class="number">0x20</span>, <span class="number">0x07</span>, <span class="number">0x4A</span>, <span class="number">0xA4</span>, <span class="number">0xEB</span>, <span class="number">0x77</span>, <span class="number">0xBC</span>, <span class="number">0xD3</span>, <span class="number">0xE1</span>, </span><br><span class="line">  <span class="number">0x66</span>, <span class="number">0x2A</span>, <span class="number">0x6B</span>, <span class="number">0xE7</span>, <span class="number">0x79</span>, <span class="number">0xCC</span>, <span class="number">0x86</span>, <span class="number">0x16</span>, <span class="number">0xD0</span>, <span class="number">0xD1</span>, </span><br><span class="line">  <span class="number">0x19</span>, <span class="number">0x55</span>, <span class="number">0x3C</span>, <span class="number">0x9F</span>, <span class="number">0xFB</span>, <span class="number">0x30</span>, <span class="number">0x98</span>, <span class="number">0xBD</span>, <span class="number">0xB8</span>, <span class="number">0xF1</span>, </span><br><span class="line">  <span class="number">0x9E</span>, <span class="number">0x61</span>, <span class="number">0xCD</span>, <span class="number">0x90</span>, <span class="number">0xCE</span>, <span class="number">0x7C</span>, <span class="number">0x8D</span>, <span class="number">0x57</span>, <span class="number">0xAE</span>, <span class="number">0x6A</span>, </span><br><span class="line">  <span class="number">0xB3</span>, <span class="number">0x3D</span>, <span class="number">0x76</span>, <span class="number">0xA7</span>, <span class="number">0x71</span>, <span class="number">0x88</span>, <span class="number">0xA2</span>, <span class="number">0xBA</span>, <span class="number">0x4F</span>, <span class="number">0x3E</span>, </span><br><span class="line">  <span class="number">0x40</span>, <span class="number">0x64</span>, <span class="number">0x0F</span>, <span class="number">0x48</span>, <span class="number">0x21</span>, <span class="number">0x35</span>, <span class="number">0x36</span>, <span class="number">0x2F</span>, <span class="number">0xE8</span>, <span class="number">0x14</span>, </span><br><span class="line">  <span class="number">0x5D</span>, <span class="number">0x51</span>, <span class="number">0xD8</span>, <span class="number">0xB5</span>, <span class="number">0xFE</span>, <span class="number">0xD2</span>, <span class="number">0x96</span>, <span class="number">0x93</span>, <span class="number">0xA1</span>, <span class="number">0xB6</span>, </span><br><span class="line">  <span class="number">0x43</span>, <span class="number">0x0D</span>, <span class="number">0x4C</span>, <span class="number">0x80</span>, <span class="number">0xC9</span>, <span class="number">0xFF</span>, <span class="number">0xA3</span>, <span class="number">0xDD</span>, <span class="number">0x72</span>, <span class="number">0x05</span>, </span><br><span class="line">  <span class="number">0x59</span>, <span class="number">0xBF</span>, <span class="number">0x0E</span>, <span class="number">0x26</span>, <span class="number">0x34</span>, <span class="number">0x1F</span>, <span class="number">0x13</span>, <span class="number">0xE5</span>, <span class="number">0xDC</span>, <span class="number">0xF2</span>, </span><br><span class="line">  <span class="number">0xC6</span>, <span class="number">0x50</span>, <span class="number">0x1E</span>, <span class="number">0xE4</span>, <span class="number">0x85</span>, <span class="number">0xB7</span>, <span class="number">0x39</span>, <span class="number">0x8A</span>, <span class="number">0xCA</span>, <span class="number">0xED</span>, </span><br><span class="line">  <span class="number">0x9C</span>, <span class="number">0xBB</span>, <span class="number">0x56</span>, <span class="number">0x23</span>, <span class="number">0x1A</span>, <span class="number">0xF0</span>, <span class="number">0x32</span>, <span class="number">0x58</span>, <span class="number">0xB2</span>, <span class="number">0x65</span>, </span><br><span class="line">  <span class="number">0x33</span>, <span class="number">0x6F</span>, <span class="number">0x41</span>, <span class="number">0xBE</span>, <span class="number">0x3F</span>, <span class="number">0x6D</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0xAD</span>, <span class="number">0x5F</span>, </span><br><span class="line">  <span class="number">0xC3</span>, <span class="number">0x81</span>, <span class="number">0x25</span>, <span class="number">0xA8</span>, <span class="number">0xA0</span>, <span class="number">0x9A</span>, <span class="number">0xF6</span>, <span class="number">0xF7</span>, <span class="number">0x5E</span>, <span class="number">0x99</span>, </span><br><span class="line">  <span class="number">0x22</span>, <span class="number">0x2E</span>, <span class="number">0x4B</span>, <span class="number">0xF9</span>, <span class="number">0x3B</span>, <span class="number">0x02</span>, <span class="number">0x7A</span>, <span class="number">0xB9</span>, <span class="number">0x5C</span>, <span class="number">0x69</span>, </span><br><span class="line">  <span class="number">0xF8</span>, <span class="number">0x1C</span>, <span class="number">0xDB</span>, <span class="number">0x01</span>, <span class="number">0x7D</span>, <span class="number">0xFD</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//keyExpansion-get the <span class="built_in">round</span> key</span><br><span class="line">void AES::keyExpansion(byte key[], word w[])&#123;</span><br><span class="line"><span class="built_in">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">int</span> j,k;</span><br><span class="line">word temp;</span><br><span class="line"><span class="keyword">while</span>(i &lt; Nk)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">w[j].wordKey[i] = key[j+<span class="number">4</span>*i];</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">i = Nk;</span><br><span class="line"><span class="keyword">while</span>(i &lt; Nb*(Nr+<span class="number">1</span>))&#123;</span><br><span class="line">temp = w[i-<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span>((i%Nk) == <span class="number">0</span>)&#123;</span><br><span class="line">temp = rotWord(temp);</span><br><span class="line">temp = subWord(temp);</span><br><span class="line">temp = wordXOR(temp, Rcon[i / Nk]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Nk &gt; <span class="number">6</span> &amp;&amp; (i%Nk) == <span class="number">4</span>)&#123;</span><br><span class="line">temp = subWord(temp);</span><br><span class="line">&#125;</span><br><span class="line">w[i] = wordXOR(w[i - Nk], temp);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// some sector <span class="keyword">in</span> keyExpansion</span><br><span class="line">word AES::rotWord(word w)&#123;</span><br><span class="line"><span class="built_in">int</span> i;</span><br><span class="line">word temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line">temp.wordKey[(i+<span class="number">3</span>) % <span class="number">4</span>] = w.wordKey[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">word AES::subWord(word w)&#123;</span><br><span class="line"><span class="built_in">int</span> i;</span><br><span class="line">byte L, R;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line">L = w.wordKey[i] &gt;&gt; <span class="number">4</span>;</span><br><span class="line">R = w.wordKey[i] &amp; <span class="number">0x0f</span>;</span><br><span class="line">w.wordKey[i] = SBox[L][R];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">word AES::wordXOR(word w1, word w2)&#123;</span><br><span class="line"><span class="built_in">int</span> i;</span><br><span class="line">word temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line">temp.wordKey[i] = w1.wordKey[i] ^ w2.wordKey[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//encryption</span><br><span class="line">void AES::encryption()&#123;</span><br><span class="line"><span class="built_in">int</span> i, j ,k;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">cipherText[i].wordKey[j] = plainText[i].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">// <span class="built_in">round</span> function</span><br><span class="line">addRoundKey(cipherText, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;<span class="number">10</span>; i++)&#123;</span><br><span class="line">subByte(cipherText);</span><br><span class="line">shiftRows(cipherText);</span><br><span class="line">mixColumn(cipherText);</span><br><span class="line">addRoundKey(cipherText, i);</span><br><span class="line">&#125;</span><br><span class="line">subByte(cipherText);</span><br><span class="line">shiftRows(cipherText);</span><br><span class="line">addRoundKey(cipherText, <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void AES::subByte(word <span class="keyword">in</span>[])&#123;</span><br><span class="line"><span class="built_in">int</span> i,j;</span><br><span class="line">byte L, R;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">L = <span class="keyword">in</span>[i].wordKey[j] &gt;&gt; <span class="number">4</span>;</span><br><span class="line">R = <span class="keyword">in</span>[i].wordKey[j] &amp; <span class="number">0x0f</span>;</span><br><span class="line"><span class="keyword">in</span>[i].wordKey[j] = SBox[L][R];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void AES::shiftRows(word <span class="keyword">in</span>[])&#123;</span><br><span class="line"><span class="built_in">int</span> i,j;</span><br><span class="line">word temp[<span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">temp[i].wordKey[j] = <span class="keyword">in</span>[(i+j)%<span class="number">4</span>].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line"><span class="keyword">in</span>[i].wordKey[j] = temp[i].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void AES::mixColumn(word <span class="keyword">in</span>[])&#123;</span><br><span class="line">word result[<span class="number">4</span>];</span><br><span class="line"><span class="built_in">int</span> i, j, k;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">result[i].wordKey[j] = GFMultiplyByte(mixColumnMatrix[j][<span class="number">0</span>], <span class="keyword">in</span>[i].wordKey[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">1</span>; k&lt;<span class="number">4</span>; k++)&#123;</span><br><span class="line">result[i].wordKey[j] ^= GFMultiplyByte(mixColumnMatrix[j][k], <span class="keyword">in</span>[i].wordKey[k]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line"><span class="keyword">in</span>[i].wordKey[j] = result[i].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//forexample: <span class="number">0xaf</span> * <span class="number">0x25</span></span><br><span class="line">byte AES::GFMultiplyByte(byte L, byte R)&#123;</span><br><span class="line">byte temp[<span class="number">8</span>];</span><br><span class="line">byte result = <span class="number">0x00</span>;</span><br><span class="line">temp[<span class="number">0</span>] = L;</span><br><span class="line"><span class="built_in">int</span> i;</span><br><span class="line">    // temp[<span class="number">0</span>] = L, temp[<span class="number">1</span>] = L*x(modm(x)), temp[<span class="number">2</span>] = L*x^<span class="number">2</span>(mod(m(x))), temp[<span class="number">3</span>] = L*x^<span class="number">3</span>(mod(m(x)))...</span><br><span class="line">//先计算，再存起来，后面根据R的实际情况选用需要的</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;<span class="number">8</span>; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(temp[i-<span class="number">1</span>] &gt;= <span class="number">0x80</span>)&#123;</span><br><span class="line">temp[i] = (temp[i-<span class="number">1</span>] &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x1b</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">temp[i] = temp[i-<span class="number">1</span>] &lt;&lt; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">int</span>((R &gt;&gt; i) &amp; <span class="number">0x01</span>) == <span class="number">1</span>)&#123;</span><br><span class="line">result ^= temp[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void AES::addRoundKey(word <span class="keyword">in</span>[], <span class="built_in">int</span> <span class="built_in">round</span>)&#123;</span><br><span class="line"><span class="built_in">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line"><span class="keyword">in</span>[i].wordKey[j] ^= wordKey[i+<span class="number">4</span>*<span class="built_in">round</span>].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//decryption</span><br><span class="line">void AES::decryption()&#123;</span><br><span class="line"><span class="built_in">int</span> i, j, k;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">deCipherText[i].wordKey[j] = cipherText[i].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">addRoundKey(deCipherText, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">9</span>; i&gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">invShiftRows(deCipherText);</span><br><span class="line">invSubByte(deCipherText);</span><br><span class="line">addRoundKey(deCipherText, i);</span><br><span class="line">invMixColumn(deCipherText);</span><br><span class="line">&#125;</span><br><span class="line">invShiftRows(deCipherText);</span><br><span class="line">invSubByte(deCipherText);</span><br><span class="line">addRoundKey(deCipherText, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void AES::invShiftRows(word <span class="keyword">in</span>[])&#123;</span><br><span class="line"><span class="built_in">int</span> i,j;</span><br><span class="line">word temp[<span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">temp[i].wordKey[j] = <span class="keyword">in</span>[(i-j+<span class="number">4</span>)%<span class="number">4</span>].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line"><span class="keyword">in</span>[i].wordKey[j] = temp[i].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void AES::invSubByte(word <span class="keyword">in</span>[])&#123;</span><br><span class="line"><span class="built_in">int</span> i,j;</span><br><span class="line">byte L, R;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">L = <span class="keyword">in</span>[i].wordKey[j] &gt;&gt; <span class="number">4</span>;</span><br><span class="line">R = <span class="keyword">in</span>[i].wordKey[j] &amp; <span class="number">0x0f</span>;</span><br><span class="line"><span class="keyword">in</span>[i].wordKey[j] = invSBox[L][R];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void AES::invMixColumn(word <span class="keyword">in</span>[])&#123;</span><br><span class="line">word result[<span class="number">4</span>];</span><br><span class="line"><span class="built_in">int</span> i, j, k;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line">result[i].wordKey[j] = GFMultiplyByte(invmixColumnMatrix[j][<span class="number">0</span>], <span class="keyword">in</span>[i].wordKey[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">1</span>; k&lt;<span class="number">4</span>; k++)&#123;</span><br><span class="line">result[i].wordKey[j] ^= GFMultiplyByte(invmixColumnMatrix[j][k], <span class="keyword">in</span>[i].wordKey[k]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++)&#123;</span><br><span class="line"><span class="keyword">in</span>[i].wordKey[j] = result[i].wordKey[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> main(<span class="built_in">int</span> argc, char const *argv[])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> i;</span><br><span class="line">    //设置明文和密钥</span><br><span class="line">byte plain[<span class="number">16</span>], key[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">16</span>; i++)&#123;</span><br><span class="line">plain[i] = byte(i);</span><br><span class="line">key[i] = <span class="number">0x01</span>;</span><br><span class="line">&#125;</span><br><span class="line">AES aes;</span><br><span class="line">aes.setPlainText(plain);</span><br><span class="line">aes.setCipherKey(key);</span><br><span class="line">aes.encryption();</span><br><span class="line">aes.decryption();</span><br><span class="line">aes.showMesage();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 密码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows rust安装全教程(保姆级)</title>
      <link href="/2024/07/15/windows%20rust%E5%AE%89%E8%A3%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%EF%BC%89/"/>
      <url>/2024/07/15/windows%20rust%E5%AE%89%E8%A3%85%E5%85%A8%E6%95%99%E7%A8%8B%EF%BC%88%E4%BF%9D%E5%A7%86%E7%BA%A7%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="安装条件"><a href="#安装条件" class="headerlink" title="安装条件"></a>安装条件</h1><p>rust底层依赖C环境，所以我们需要先安装C&#x2F;C++编译环境。这时我们有两个选择：1.安装微软的msvc；2.安装mingw&#x2F;cygwin。选择msvc安装的优点是一路默认即可，缺点是内存占用较大，需要好几个G；mingw安装的优点是内存占用较小，缺点是在安装中需要手动选择一下。接下来我会分别将讲述两个安装过程，大家看自己需求进行安装。</p><h1 id="路径调整"><a href="#路径调整" class="headerlink" title="路径调整"></a>路径调整</h1><p>本人不喜欢在C盘安装东西，所以这个步骤是调整安装路径的，如果选择安装在C盘可以跳过此第一步，跳至2.配置加速安装地址</p><h2 id="1-配置rustup和cargo目录"><a href="#1-配置rustup和cargo目录" class="headerlink" title="1.配置rustup和cargo目录"></a>1.配置rustup和cargo目录</h2><p>我们可以通过设置环境变量来改变默认安装位置</p><p>打开环境变量的过程如下：打开设置-&gt;在搜索框搜索环境变量-&gt;点击编辑系统环境变量-&gt;点击环境变量-&gt;在系统变量或者用户变量点击新建，输入</p><p>CARGO_HOME   W:\Rust\.cargo</p><p>RUSTUP_HOME  W:\Rust\.rustup</p><p>这里的W：是我的rust安装的盘，大家自行换成想要安装的盘</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151259594.png" alt="image-20240715125900533"></p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151302895.png"></p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151310179.png" alt="image-20240715131025153"></p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151309009.png" alt="image-20240715130956981"></p><h2 id="2-配置加速安装地址"><a href="#2-配置加速安装地址" class="headerlink" title="2.配置加速安装地址"></a>2.配置加速安装地址</h2><p>因为从官网下载很慢，所以改用国内镜像加速，设置以下环境变量</p><p><strong>RUSTUP_DIST_SERVER  <a href="https://mirrors.tuna.tsinghua.edu.cn/rustup">https://mirrors.tuna.tsinghua.edu.cn/rustup</a><br>RUSTUP_UPDATE_ROOT  <a href="https://mirrors.tuna.tsinghua.edu.cn/rustup/rustup">https://mirrors.tuna.tsinghua.edu.cn/rustup/rustup</a></strong></p><p>操作步骤上同</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151329769.png" alt="image-20240715132942742"></p><p>图如上图，然后一路确定至关闭界面</p><h1 id="安装rustup-init"><a href="#安装rustup-init" class="headerlink" title="安装rustup-init"></a>安装rustup-init</h1><p>网站链接：<a href="https://www.rust-lang.org/learn/get-started">rustup-init</a></p><p>根据自己的电脑系统选择32位或64位安装</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151355761.png"></p><h2 id="一、使用msvc安装"><a href="#一、使用msvc安装" class="headerlink" title="一、使用msvc安装"></a>一、使用msvc安装</h2><p>msvc是在安装visual studio code时会安装的，如果没有安装参考此文章：<a href="https://blog.csdn.net/b1049112625/article/details/134524652">https://blog.csdn.net/b1049112625/article/details/134524652</a></p><p>Rust 所需的 msvc 命令行程序需要手动添加到环境变量中，其位于：<code>%Visual Studio 安装位置%\VC\Tools\MSVC\%version%\bin\Hostx64\x64</code>（请自行替换其中的 %Visual Studio 安装位置%、%version% 字段</p><p> 完成后我们直接点击rustup-init.exe</p><p>显示如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Hehongyuan&gt; rustup-init.exe</span><br><span class="line">......</span><br><span class="line">Current installation options:</span><br><span class="line"></span><br><span class="line">   default host triple: x86_64-pc-windows-msvc</span><br><span class="line">     default toolchain: stable (default)</span><br><span class="line">               profile: default</span><br><span class="line">  modify PATH variable: yes</span><br><span class="line"></span><br><span class="line">1) Proceed with installation (default)</span><br><span class="line">2) Customize installation</span><br><span class="line">3) Cancel installation</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一路回车默认即可</p><h2 id="二、使用mingw安装"><a href="#二、使用mingw安装" class="headerlink" title="二、使用mingw安装"></a>二、使用mingw安装</h2><p>mingw下载链接：<a href="https://blog.csdn.net/b1049112625/article/details/134524652">mingw</a></p><p>如果你是64位的系统，那就选择x86_64开头的，反之32位的选择i686开头的。</p><p>线程模型有posix和win32，如果你想在vscode里面搞断点调试，我推荐用posix。</p><p>然后是异常处理机制，我目前用的seh，如下图</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151419057.png" alt="image-20240715141956013"></p><p>下载到本地解压后，把bin文件夹路径配置到Path系统环境变量即可。</p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151440123.png" alt="image-20240715144019097"></p><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151439720.png" alt="image-20240715143934668"></p><p>验证安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gcc -v</span><br><span class="line"></span><br><span class="line">gdb -v</span><br><span class="line"></span><br><span class="line">mingw32-make -v</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后我们点击rustup-init进行运行</p><p>出现提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Welcome to Rust!</span><br><span class="line"></span><br><span class="line">This will download and install the official compiler for the Rust</span><br><span class="line">programming language, and its package manager, Cargo.</span><br><span class="line"></span><br><span class="line">Rustup metadata and toolchains will be installed into the Rustup</span><br><span class="line">home directory, located at:</span><br><span class="line"></span><br><span class="line">  W:\Rust\.rustup</span><br><span class="line"></span><br><span class="line">This can be modified with the RUSTUP_HOME environment variable.</span><br><span class="line"></span><br><span class="line">The Cargo home directory is located at:</span><br><span class="line"></span><br><span class="line">  W:\Rust\.cargo</span><br><span class="line"></span><br><span class="line">This can be modified with the CARGO_HOME environment variable.</span><br><span class="line"></span><br><span class="line">The cargo, rustc, rustup and other commands will be added to</span><br><span class="line">Cargo&#x27;s bin directory, located at:</span><br><span class="line"></span><br><span class="line">  W:\Rust\.cargo\bin</span><br><span class="line"></span><br><span class="line">This path will then be added to your PATH environment variable by</span><br><span class="line">modifying the HKEY_CURRENT_USER/Environment/PATH registry key.</span><br><span class="line"></span><br><span class="line">You can uninstall at any time with rustup self uninstall and</span><br><span class="line">these changes will be reverted.</span><br><span class="line"></span><br><span class="line">Current installation options:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   default host triple: x86_64-pc-windows-msvc</span><br><span class="line">     default toolchain: stable (default)</span><br><span class="line">               profile: default</span><br><span class="line">  modify PATH variable: yes</span><br><span class="line"></span><br><span class="line">1) Proceed with standard installation (default - just press enter)</span><br><span class="line">2) Customize installation</span><br><span class="line">3) Cancel installation</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>这里我们输入2，即自定义安装，回车，出现提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;2</span><br><span class="line"></span><br><span class="line">I&#x27;m going to ask you the value of each of these installation options.</span><br><span class="line">You may simply press the Enter key to leave unchanged.</span><br><span class="line"></span><br><span class="line">Default host triple? [x86_64-pc-windows-msvc]</span><br></pre></td></tr></table></figure><p>输入x86_64-pc-windows-gnu（可以复制下来然后在rustup右键粘贴，无需手动输入），回车，出现提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Default toolchain? (stable/beta/nightly/none) [stable]</span><br></pre></td></tr></table></figure><p>输入stable，回车，出现提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Profile (which tools and data to install)? (minimal/default/complete) [default]</span><br></pre></td></tr></table></figure><p>输入complete，回车，出现提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Modify PATH variable? (Y/n)</span><br></pre></td></tr></table></figure><p>输入Y回车，出现提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Current installation options:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   default host triple: x86_64-pc-windows-gnu</span><br><span class="line">     default toolchain: stable</span><br><span class="line">               profile: default</span><br><span class="line">  modify PATH variable: yes</span><br><span class="line"></span><br><span class="line">1) Proceed with selected options (default - just press enter)</span><br><span class="line">2) Customize installation</span><br><span class="line">3) Cancel installation</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>输入1，出现提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">info: profile set to &#x27;default&#x27;</span><br><span class="line">info: setting default host triple to x86_64-pc-windows-gnu</span><br><span class="line">info: syncing channel updates for &#x27;stable-x86_64-pc-windows-gnu&#x27;</span><br><span class="line">info: latest update on 2022-12-15, rust version 1.66.0 (69f9c33d7 2022-12-12)</span><br><span class="line">info: downloading component &#x27;cargo&#x27;</span><br><span class="line">  7.3 MiB /   7.3 MiB (100 %)   1.9 MiB/s in  5s ETA:  0s</span><br><span class="line">info: downloading component &#x27;clippy&#x27;</span><br><span class="line">  3.6 MiB /   3.6 MiB (100 %)   1.7 MiB/s in  2s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rust-docs&#x27;</span><br><span class="line"> 19.0 MiB /  19.0 MiB (100 %)   2.1 MiB/s in 10s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rust-mingw&#x27;</span><br><span class="line">  4.2 MiB /   4.2 MiB (100 %)   2.6 MiB/s in  1s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rust-std&#x27;</span><br><span class="line"> 27.8 MiB /  27.8 MiB (100 %)   1.8 MiB/s in 14s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rustc&#x27;</span><br><span class="line"> 74.3 MiB /  74.3 MiB (100 %)   1.5 MiB/s in 49s ETA:  0s</span><br><span class="line">info: downloading component &#x27;rustfmt&#x27;</span><br><span class="line">  6.6 MiB /   6.6 MiB (100 %)   2.2 MiB/s in  3s ETA:  0s</span><br><span class="line">info: installing component &#x27;cargo&#x27;</span><br><span class="line">info: installing component &#x27;clippy&#x27;</span><br><span class="line">info: installing component &#x27;rust-docs&#x27;</span><br><span class="line"> 19.0 MiB /  19.0 MiB (100 %)   3.0 MiB/s in  5s ETA:  0s</span><br><span class="line"> ......</span><br><span class="line"> ......</span><br><span class="line"> ......</span><br><span class="line"> 直到出现</span><br><span class="line"> Rust is installed now. Great!</span><br><span class="line"></span><br><span class="line">To get started you may need to restart your current shell.</span><br><span class="line">This would reload its PATH environment variable to include</span><br><span class="line">Cargo&#x27;s bin directory (D:\Programs\rust\cargo_home\bin).</span><br><span class="line"></span><br><span class="line">Press the Enter key to continue.</span><br></pre></td></tr></table></figure><p>此时代表全部安装完成，如果中间出现错误那么重复上述步骤即可</p><p>回车关闭窗口</p><p>win+R打开cmd</p><p>分别输入每行代码，出现相关信息即代表rust安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rustc -V</span><br><span class="line">rustup -V</span><br><span class="line">cargo -V</span><br><span class="line">rustup show </span><br></pre></td></tr></table></figure><h1 id="rust换源"><a href="#rust换源" class="headerlink" title="rust换源"></a>rust换源</h1><p>使用管理员权限打开powershell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir %USERPROFILE%\.cargo</span><br><span class="line">notepad %USERPROFILE%\.cargo\config.toml</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个步骤是在cargo下创建config.toml，%USERPROFILE%换成自己的安装路径即可</p><p>打开config.toml,添加一下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[source.crates-io]</span><br><span class="line">replace-with = &#x27;ustc&#x27;</span><br><span class="line"></span><br><span class="line">[source.ustc]</span><br><span class="line">registry = &quot;https://mirrors.ustc.edu.cn/crates.io-index&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>保存文件。通过命令更新索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo update</span><br></pre></td></tr></table></figure><p>你可以通过以下命令来验证配置是否生效：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo search some_package_name</span><br></pre></td></tr></table></figure><p>如果搜索结果能快速返回，并且没有网络超时等问题，说明国内源配置成功。</p><p><strong>验证国内源配置</strong></p><p>1.在项目目录中搜索包：</p><p>尝试搜索一个流行的包来验证镜像源是否配置正确。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo search regex</span><br></pre></td></tr></table></figure><p>2.添加依赖项并构建项目： 你可以在<code>Cargo.toml</code>文件中添加一个依赖项，然后运行<code>cargo build</code>来验证。</p><p>编辑 <code>Cargo.toml</code> 文件，添加一个依赖项，例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[dependencies]</span><br><span class="line">regex = &quot;1&quot;</span><br></pre></td></tr></table></figure><p><img src="https://typora-picture-of-yunxi.oss-cn-beijing.aliyuncs.com/img/202407151501920.png" alt="image-20240715150108892"></p><p>然后运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cargo build</span><br></pre></td></tr></table></figure><p>如果搜索或下载包没有遇到网络超时等问题，说明国内源配置成功</p><p>就此大功告成</p>]]></content>
      
      
      <categories>
          
          <category> rust语言学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语言学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
